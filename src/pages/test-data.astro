---
import { db, SurveyUser, LoginActivity } from "astro:db";
import { eq, desc } from "astro:db";

// Get all admin users
const adminUsers = await db.select({
  id: SurveyUser.id,
  username: SurveyUser.username,
  email: SurveyUser.email,
  created_at: SurveyUser.created_at,
  last_login: SurveyUser.last_login,
  is_active: SurveyUser.is_active,
  role: SurveyUser.role
}).from(SurveyUser)
  .where(eq(SurveyUser.role, "admin"))
  .orderBy(desc(SurveyUser.created_at));

// Get recent login activity for all admin users
let recentLogins = [];
try {
  recentLogins = await db.select({
    userId: LoginActivity.userId,
    login_time: LoginActivity.login_time,
    ip_address: LoginActivity.ip_address,
    username: SurveyUser.username
  }).from(LoginActivity)
    .innerJoin(SurveyUser, eq(LoginActivity.userId, SurveyUser.id))
    .where(eq(SurveyUser.role, "admin"))
    .orderBy(desc(LoginActivity.login_time))
    .limit(20);
} catch (error) {
  console.error("Error fetching recent logins:", error);
  recentLogins = [];
}

console.log("Admin users:", adminUsers.length);
console.log("Recent logins:", recentLogins.length);
---

<html>
<head>
  <title>User Data Test</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; background: #111; color: #fff; }
    .section { margin: 20px 0; padding: 20px; background: #222; border-radius: 8px; }
    .user { margin: 10px 0; padding: 10px; background: #333; border-radius: 4px; }
    .login { margin: 10px 0; padding: 10px; background: #444; border-radius: 4px; }
  </style>
</head>
<body>
  <h1>User Data Test</h1>
  
  <div class="section">
    <h2>Admin Users ({adminUsers.length})</h2>
    {adminUsers.map((user) => (
      <div class="user">
        <strong>{user.username}</strong> ({user.email || 'No email'})<br/>
        Created: {user.created_at?.toLocaleString() || 'Unknown'}<br/>
        Last Login: {user.last_login?.toLocaleString() || 'Never'}<br/>
        Status: {user.is_active ? 'Active' : 'Inactive'}
      </div>
    ))}
  </div>
  
  <div class="section">
    <h2>Recent Login Activity ({recentLogins.length})</h2>
    {recentLogins.map((login) => (
      <div class="login">
        <strong>{login.username}</strong><br/>
        Time: {login.login_time.toLocaleString()}<br/>
        IP: {login.ip_address}
      </div>
    ))}
  </div>
</body>
</html>
