---
import Layout from "@/layouts/Layout.astro";
import AdminNavigation from "@/components/admin/AdminNavigation.astro";
import { lucia } from "@/lib/auth";
import { db, SurveyUser } from "astro:db";
import { eq } from "astro:db";

// Check if user is logged in and is admin
const sessionId = Astro.cookies.get(lucia.sessionCookieName)?.value ?? null;
if (!sessionId) {
  return Astro.redirect("/admin/login");
}

const { session, user } = await lucia.validateSession(sessionId);
if (!session || !user) {
  return Astro.redirect("/admin/login");
}

// Check if user is admin
const userRecord = await db.select().from(SurveyUser)
  .where(eq(SurveyUser.id, user.id))
  .get();

if (!userRecord || userRecord.role !== "admin") {
  return Astro.redirect("/admin/login");
}

// Get the user ID from the URL
const userId = Astro.params.id;
if (!userId) {
  return Astro.redirect("/admin/users");
}

// Get the user to edit
const editUser = await db.select().from(SurveyUser)
  .where(eq(SurveyUser.id, userId))
  .get();

if (!editUser) {
  return Astro.redirect("/admin/users");
}

let errorMessage = "";
let successMessage = "";

// Handle form submission
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const username = formData.get("username")?.toString();
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();
    const confirmPassword = formData.get("confirmPassword")?.toString();
    const isActive = formData.get("is_active") === "on";

    // Validation
    if (!username || !email) {
      errorMessage = "Username and email are required";
    } else if (password && password !== confirmPassword) {
      errorMessage = "Passwords do not match";
    } else if (password && password.length < 8) {
      errorMessage = "Password must be at least 8 characters long";
    } else {
      // Check if username already exists for another user
      const existingUser = await db.select().from(SurveyUser)
        .where(eq(SurveyUser.username, username))
        .get();

      if (existingUser && existingUser.id !== userId) {
        errorMessage = "Username already exists";
      } else {
        // Update user data
        const updateData: any = {
          username,
          email,
          is_active: isActive,
        };

        // Only update password if provided
        if (password) {
          const bcrypt = await import("bcryptjs");
          updateData.password = await bcrypt.hash(password, 10);
        }

        await db.update(SurveyUser)
          .set(updateData)
          .where(eq(SurveyUser.id, userId));

        successMessage = "User updated successfully";
        
        // Refresh the user data
        const updatedUser = await db.select().from(SurveyUser)
          .where(eq(SurveyUser.id, userId))
          .get();
        if (updatedUser) {
          Object.assign(editUser, updatedUser);
        }
      }
    }
  } catch (error) {
    console.error("Error updating user:", error);
    errorMessage = "Error updating user";
  }
}
---

<Layout title="Edit Admin User" isLandingPage={false}>
  <div class="container mx-auto px-4 py-8">
    <div class="max-w-7xl mx-auto">
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-white mb-8">Edit Admin User</h1>
        <AdminNavigation activePage="users" />
      </div>

      <div class="max-w-2xl">
        <!-- Form -->
        <div class="bg-zinc-900 border border-zinc-800 rounded-lg shadow-lg">
          <div class="px-6 py-4 border-b border-zinc-800">
            <h2 class="text-xl font-semibold text-white">Edit User Information</h2>
          </div>
          <form method="POST" class="px-6 py-6 space-y-6">
            {errorMessage && (
              <div class="bg-red-900/50 border border-red-800 text-red-300 px-4 py-3 rounded">
                {errorMessage}
              </div>
            )}
            
            {successMessage && (
              <div class="bg-green-900/50 border border-green-800 text-green-300 px-4 py-3 rounded">
                {successMessage}
              </div>
            )}

            <div>
              <label for="username" class="block text-sm font-medium text-zinc-300 mb-2">
                Username *
              </label>
              <input 
                type="text" 
                id="username" 
                name="username" 
                required
                value={editUser.username}
                class="w-full px-3 py-2 bg-zinc-800 border border-zinc-700 rounded-md text-white placeholder-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
                placeholder="Enter username"
              />
            </div>

            <div>
              <label for="email" class="block text-sm font-medium text-zinc-300 mb-2">
                Email Address *
              </label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required
                value={editUser.email || ""}
                class="w-full px-3 py-2 bg-zinc-800 border border-zinc-700 rounded-md text-white placeholder-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
                placeholder="Enter email address"
              />
            </div>

            <div>
              <label for="password" class="block text-sm font-medium text-zinc-300 mb-2">
                New Password (leave blank to keep current)
              </label>
              <input 
                type="password" 
                id="password" 
                name="password" 
                minlength="8"
                class="w-full px-3 py-2 bg-zinc-800 border border-zinc-700 rounded-md text-white placeholder-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
                placeholder="Enter new password (minimum 8 characters)"
              />
            </div>

            <div>
              <label for="confirmPassword" class="block text-sm font-medium text-zinc-300 mb-2">
                Confirm New Password
              </label>
              <input 
                type="password" 
                id="confirmPassword" 
                name="confirmPassword" 
                minlength="8"
                class="w-full px-3 py-2 bg-zinc-800 border border-zinc-700 rounded-md text-white placeholder-zinc-400 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
                placeholder="Confirm new password"
              />
            </div>

            <div>
              <label class="flex items-center">
                <input 
                  type="checkbox" 
                  name="is_active" 
                  checked={editUser.is_active}
                  class="w-4 h-4 text-primary bg-zinc-800 border-zinc-600 rounded focus:ring-primary focus:ring-2"
                />
                <span class="ml-2 text-sm text-zinc-300">Account is active</span>
              </label>
            </div>

            <div class="bg-zinc-800 p-4 rounded-lg">
              <h3 class="text-sm font-medium text-zinc-300 mb-2">Account Details</h3>
              <ul class="text-sm text-zinc-400 space-y-1">
                <li>• Role: Administrator</li>
                <li>• Created: {editUser.created_at?.toLocaleDateString() || 'Unknown'}</li>
                <li>• Last Login: {editUser.last_login?.toLocaleDateString() || 'Never'}</li>
                <li>• Password: {successMessage && successMessage.includes('User updated') ? 'Recently updated' : 'Set (hidden for security)'}</li>
              </ul>
            </div>

            <div class="flex justify-end space-x-4">
              <a 
                href="/admin/users"
                class="px-4 py-2 border border-zinc-700 rounded-md text-zinc-300 hover:bg-zinc-800 transition-colors"
              >
                Cancel
              </a>
              <button 
                type="submit"
                class="px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/80 transition-colors"
              >
                Update User
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</Layout>
