---
import Layout from "@/layouts/Layout.astro";
import { db, SurveyUser } from "astro:db";
import { eq } from "astro:db";

let errorMessage: string | null = null;
let resendMessage: string | null = null;

// For development, we'll bypass the cookie check and show a simple prompt
// In production, you'd want proper session management
console.log("üîç VERIFY PAGE: Development mode - showing terminal prompt");

// Check if we're in development mode
const isDev = import.meta.env.DEV;

// For development, we'll skip the session validation
// In production, you'd want to validate the user session properly
let tempLoginData = { userId: 'admin-user' }; // Default for dev mode

// Get user info for display
const user = await db.select().from(SurveyUser)
  .where(eq(SurveyUser.id, tempLoginData.userId))
  .get();

if (!user) {
  return Astro.redirect("/admin/login");
}

// Check for error in query params
const url = new URL(Astro.request.url);
if (url.searchParams.get('error') === 'invalid') {
  errorMessage = "Invalid verification code. Please try again.";
} else if (url.searchParams.get('error') === 'expired') {
  errorMessage = "Verification code has expired. Please request a new one.";
}

// Handle resend request
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const action = formData.get("action")?.toString();
  
  if (action === "resend") {
    // Import here to avoid module issues
    const { generateVerificationCode, getCodeExpirationTime, sendVerificationCode } = await import("@/lib/simpleVerification");
    
    if (user.two_factor_method === "email" && user.email) {
      const code = generateVerificationCode();
      const expiresAt = getCodeExpirationTime();
      
      await db.update(SurveyUser)
        .set({ 
          verification_code: code,
          verification_code_expires: expiresAt 
        })
        .where(eq(SurveyUser.id, user.id));
      
      const result = await sendVerificationCode("email", user.email, code, user.username);
      resendMessage = `New code sent to ${user.email}`;
      
    } else if (user.two_factor_method === "sms" && user.phone_number) {
      const code = generateVerificationCode();
      const expiresAt = getCodeExpirationTime();
      
      await db.update(SurveyUser)
        .set({ 
          verification_code: code,
          verification_code_expires: expiresAt 
        })
        .where(eq(SurveyUser.id, user.id));
      
      const result = await sendVerificationCode("sms", user.phone_number, code, user.username);
      resendMessage = `New code sent to ${user.phone_number}`;
    }
  }
}

// Determine verification method display
let methodDisplay = "";
let destinationDisplay = "";

if (user.two_factor_method === "email" && user.email) {
  methodDisplay = "email";
  destinationDisplay = user.email;
} else if (user.two_factor_method === "sms" && user.phone_number) {
  methodDisplay = "text message";
  destinationDisplay = user.phone_number;
} else if (user.two_factor_method === "totp") {
  methodDisplay = "authenticator app";
  destinationDisplay = "your authenticator app";
}
---

<Layout title="Verify Your Identity" isLandingPage={false}>
  <div class="flex min-h-screen items-center justify-center">
    <div class="w-full max-w-sm p-6 bg-gray-800 rounded-lg shadow-md">
      <h2 class="text-2xl font-bold text-white text-center mb-2">Verify Your Identity</h2>
      <p class="text-gray-300 text-center mb-6 text-sm">
        Enter the verification code sent to your {methodDisplay}
      </p>
      
      {destinationDisplay && (
        <p class="text-gray-400 text-center mb-4 text-xs">
          Code sent to: <span class="font-mono">{destinationDisplay}</span>
        </p>
      )}

      <div class="bg-yellow-900/30 border-2 border-yellow-500 rounded-lg p-4 mb-6">
        <div class="flex items-center space-x-2 mb-2">
          <span class="text-yellow-400 text-lg">üîç</span>
          <p class="text-yellow-200 font-semibold">Development Mode</p>
        </div>
        <p class="text-yellow-100 text-sm">
          <strong>Check your terminal console</strong> for the verification code.
          Look for a line like: <span class="font-mono bg-gray-800 px-1 rounded">üìß EMAIL VERIFICATION CODE: 123456</span>
        </p>
      </div>
      
      {errorMessage && (
        <div class="bg-red-500/10 border border-red-500 text-red-500 px-4 py-2 rounded mb-4">
          {errorMessage}
        </div>
      )}

      {resendMessage && (
        <div class="bg-green-500/10 border border-green-500 text-green-500 px-4 py-2 rounded mb-4">
          {resendMessage}
        </div>
      )}

      <form method="POST" action="/api/verify-simple-2fa">
        <div class="space-y-4">
          <div>
            <label for="twoFactorCode" class="block text-sm font-medium text-gray-300 mb-2">
              Verification Code
            </label>
            <input
              type="text"
              name="twoFactorCode"
              id="twoFactorCode"
              placeholder="000000"
              maxlength="6"
              pattern="[0-9]{6}"
              autocomplete="one-time-code"
              required
              class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white text-center text-lg tracking-widest font-mono shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-500/50"
            />
          </div>

          <button
            type="submit"
            class="w-full py-2 px-4 bg-indigo-600 hover:bg-indigo-700 text-white font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            Verify
          </button>
          
          <div class="text-center space-y-2">
            {(user.two_factor_method === "email" || user.two_factor_method === "sms") && (
              <form method="POST" class="inline">
                <input type="hidden" name="action" value="resend" />
                <button 
                  type="submit"
                  class="text-sm text-gray-400 hover:text-gray-300 underline"
                >
                  Resend code
                </button>
              </form>
            )}
            
            <div>
              <a 
                href="/admin/login" 
                class="text-sm text-gray-400 hover:text-gray-300"
              >
                ‚Üê Back to login
              </a>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</Layout>

<script>
  // Auto-focus the input and format as user types
  const input = document.getElementById('twoFactorCode') as HTMLInputElement;
  if (input) {
    input.focus();
    
    input.addEventListener('input', (e) => {
      const target = e.target as HTMLInputElement;
      // Only allow numbers
      target.value = target.value.replace(/[^0-9]/g, '');
      
      // Auto-submit when 6 digits are entered
      if (target.value.length === 6) {
        // Small delay to allow user to see the complete code
        setTimeout(() => {
          target.form?.requestSubmit();
        }, 500);
      }
    });
  }
</script>
